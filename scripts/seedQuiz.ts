import { initializeApp } from 'firebase/app';
import { getFirestore, collection, doc, setDoc, Timestamp } from 'firebase/firestore';
import { getAuth, signInWithEmailAndPassword } from 'firebase/auth';
import type { QuestionBank } from '../src/features/quiz/types';
import { db, auth } from '../src/config/firebase';

// No need to initialize Firebase since we're importing from config
const sampleQuizzes = [
  {
    id: 'react-native-intro-1-quiz',
    videoId: 'react-native-intro-1',
    questions: [
      {
        id: 'q1',
        type: 'multiple_choice',
        question: 'What is React Native?',
        options: [
          'A framework for building native mobile apps using React',
          'A database management system',
          'A web browser',
          'A programming language'
        ],
        correctOptionIndex: 0,
        explanation: 'React Native is a framework that allows you to build native mobile applications using React and JavaScript.',
        difficulty: 'beginner',
        tags: ['react-native', 'basics'],
        createdAt: Timestamp.now(),
        updatedAt: Timestamp.now(),
        creatorId: 'system',
        isAutogenerated: false,
        distractorExplanations: [
          'React Native is not a database system',
          'React Native is not a web browser',
          'React Native is a framework, not a programming language'
        ]
      },
      {
        id: 'q2',
        type: 'true_false',
        question: 'React Native apps can only be built for iOS.',
        correctAnswer: false,
        explanation: 'React Native supports both iOS and Android platform development.',
        difficulty: 'beginner',
        tags: ['react-native', 'platforms'],
        createdAt: Timestamp.now(),
        updatedAt: Timestamp.now(),
        creatorId: 'system',
        isAutogenerated: false
      },
      {
        id: 'q3',
        type: 'fill_in_blank',
        question: 'React Native uses ___ to render native components.',
        textBefore: 'React Native uses',
        textAfter: 'to render native components.',
        correctAnswer: 'JavaScript',
        acceptableAnswers: ['JavaScript', 'JS', 'javascript', 'js'],
        explanation: 'React Native uses JavaScript to define the logic and structure of your app, which is then compiled to native components.',
        difficulty: 'beginner',
        tags: ['react-native', 'javascript'],
        createdAt: Timestamp.now(),
        updatedAt: Timestamp.now(),
        creatorId: 'system',
        isAutogenerated: false
      }
    ],
    createdAt: Timestamp.now(),
    updatedAt: Timestamp.now(),
    metadata: {
      videoTitle: 'Introduction to React Native',
      videoDuration: 300000,
      generationMethod: 'manual',
      topics: ['react-native', 'mobile-development', 'javascript'],
      assessedDifficulty: 'beginner'
    }
  },
  {
    id: 'react-native-components-1-quiz',
    videoId: 'react-native-components-1',
    questions: [
      {
        id: 'q1',
        type: 'multiple_choice',
        question: 'Which of the following is a core React Native component?',
        options: [
          'View',
          'Div',
          'Container',
          'Section'
        ],
        correctOptionIndex: 0,
        explanation: 'View is one of the fundamental components in React Native, equivalent to a div in web development.',
        difficulty: 'beginner',
        tags: ['react-native', 'components'],
        createdAt: Timestamp.now(),
        updatedAt: Timestamp.now(),
        creatorId: 'system',
        isAutogenerated: false,
        distractorExplanations: [
          'Div is a web element, not a React Native component',
          'Container is not a core React Native component',
          'Section is a web element, not a React Native component'
        ]
      },
      {
        id: 'q2',
        type: 'true_false',
        question: 'Props in React Native components are mutable.',
        correctAnswer: false,
        explanation: 'Props in React Native (and React) are read-only and cannot be modified by a component.',
        difficulty: 'beginner',
        tags: ['react-native', 'props'],
        createdAt: Timestamp.now(),
        updatedAt: Timestamp.now(),
        creatorId: 'system',
        isAutogenerated: false
      },
      {
        id: 'q3',
        type: 'fill_in_blank',
        question: 'The ___ prop is used to define custom styles in React Native components.',
        textBefore: 'The',
        textAfter: 'prop is used to define custom styles in React Native components.',
        correctAnswer: 'style',
        acceptableAnswers: ['style', 'Style', 'styles'],
        explanation: 'The style prop is used to add custom styling to React Native components, similar to the style attribute in web development.',
        difficulty: 'beginner',
        tags: ['react-native', 'styling'],
        createdAt: Timestamp.now(),
        updatedAt: Timestamp.now(),
        creatorId: 'system',
        isAutogenerated: false
      }
    ],
    createdAt: Timestamp.now(),
    updatedAt: Timestamp.now(),
    metadata: {
      videoTitle: 'React Native Components',
      videoDuration: 420000,
      generationMethod: 'manual',
      topics: ['react-native', 'components', 'props'],
      assessedDifficulty: 'beginner'
    }
  }
];

async function seedQuizzes() {
  try {
    const email = process.env.TEST_USER_EMAIL;
    const password = process.env.TEST_USER_PASSWORD;
    
    if (!email || !password) {
      throw new Error('Test credentials not found in environment');
    }

    console.log('Signing in with test account:', email);
    const userCredential = await signInWithEmailAndPassword(auth, email, password);
    console.log('Signed in successfully:', userCredential.user.uid);

    // Create the quizzes
    for (const quiz of sampleQuizzes) {
      const quizRef = doc(db, 'quizzes', quiz.id);
      await setDoc(quizRef, quiz);
      console.log('âœ… Quiz created successfully with ID:', quiz.id);
    }
  } catch (error) {
    console.error('Error creating quizzes:', error);
    process.exit(1);
  }
}

seedQuizzes(); 